name: AWS Deployement

on:
    push:
        branches:
            - main

env:
    AWS_REGION: us-east-1
    ECR_REPOSITORY: changemachine
    ECS_SERVICE: fargateservice
    ECS_CLUSTER: fargatecluster
    ECS_TASK_DEFINITION: task-definition.json
    CONTAINER_NAME: changemachine    

jobs:
    integration:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - name: Install Python
              uses: actions/setup-python@v2
              with:
                    python-version: 3.9
            - name: Intall Lint Test
              run: make all
    deployement:
        needs: integration
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - name: Configure AWS Credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
                aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
                aws-region: ${{env.AWS_REGION}}
            - name: Login to ECR
              id: login-ecr
              uses: aws-actions/amazon-ecr-login@v1
            - name: Build, tag and push image to ECR
              id: build-image
              env:
                ECR_REGISTRY:  ${{steps.login-ecr.outputs.registry}}
                IMAGE_TAG: ${{github.sha}}
              run: |
                docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
                docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
                echo "image = $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
            - name: Fill in the image uri in task definition
              id: task_def
              uses: aws-actions/amazon-ecs-render-task-definition@v1
              with:
                task-definition: ${{env.ECS_TASK_DEFINITION}}
                container-name: ${{env.CONTAINER_NAME}}
                image: ${{steps.build-image.outputs.image}}
            - name: Run ECS task
              uses: aws-actions/amazon-ecs-deploy-task-definition@v1
              with:
                task-definition: ${{steps.task_def.outputs.task-definition}}
                service: ${{env.ECS_SERVICE}}
                cluster: ${{env.ECS_CLUSTER}}
                wait-for-service-stability: true
